<?xml version="1.0"?>
<implementation>
    <settings>
        <protocol>crlf</protocol>
    </settings>

    <functions>
        --
        require "socket"
        
        local debug
        local tmp

        local ipAddress = nil
        local ipPort = nil
        
        local Pioneer_SID   = "urn:shward1-com:serviceId:PioneerNavigation1"
        local Switch_SID    = "urn:upnp-org:serviceId:SwitchPower1"
        local Upnp_SID      = "urn:upnp-org:serviceId:RenderingControl1"

        local minVol = 0
        local maxVol = 161

        local PARENT_DEVICE
        
        inputUser = {
        	[04] = "DVD",
        	[25] = "BD",
        	[05] = "TV",
        	[06] = "SAT/CBL",
        	[15] = "DVR/BDR",
        	[10] = "Video 1",
        	[14] = "Video 2",
        	[19] = "HDMI1",
        	[20] = "HDMI2",
        	[21] = "HDMI3",
        	[22] = "HDMI4",
        	[23] = "HDMI5",
        	[26] = "Internet",
        	[17] = "iPod/USB",
        	[18] = "XM Radio",
        	[01] = "CD",
        	[03] = "CD-R/Tape",
        	[02] = "Tuner",
        	[00] = "Phono"
        }
        
        inputMain = {
        	[04] = "DVD",
        	[25] = "BD",
        	[05] = "TVSAT",
        	[06] = "SATCBL",
        	[15] = "DVRBDR",
        	[10] = "Video1",
        	[14] = "Video2",
        	[19] = "HDMI1",
        	[20] = "HDMI2",
        	[21] = "HDMI3",
        	[22] = "HDMI4",
        	[23] = "HDMI5",
        	[26] = "Internet",
        	[17] = "IpodUSB",
        	[18] = "XMRadio",
        	[01] = "CD",
        	[03] = "CDRTape",
        	[02] = "Tuner",
        	[00] = "Phono"
        }
        
        local function log(stuff)
            luup.log("PioneerAV: " .. stuff)
        end
                
        local function sendCommand(cmd)
          log("Sending Command: " .. cmd) 
              if (luup.io.write(cmd) == false) then
                    log("Cannot send command " .. cmd .. " communications error")
                    luup.set_failure(true)
--	            PioneerAVStartup(lul_device)
                    return false
    		  end
        end

        local function setVolume(code)
            local code = string.format("%03d" ,(math.floor(((maxVol-minVol)*code)/100+minVol+1)))
            sendCommand(code .. "VL")
        end
        
        function setIfChanged(serviceId, name, value, deviceId)
			local curValue = luup.variable_get(serviceId, name, deviceId)
    
    			if ((value ~= curValue) or (curValue == nil)) then
    				luup.variable_set(serviceId, name, value, deviceId)        
    				return true        
    			else
    				return false
            	end
		end
        
        local function handleEncodedResponse(func, code, data)
        	if(func == "CLV") then
        		--
        	elseif(func == "VSB") then
        		--
        	elseif(func == "VHT") then
        		--
        	elseif(func == "FL") then
        		--
        	else
        		--
        	end        
        end
        
        local function handleInputNames(func, code, data)
        	log("Handling RGB")
        	local inNum = data:sub(4, 5)
        	local inName = data:sub(7)
        	inputUser[tonumber(inNum)] = inName
        	log("RGB - Input Num: " .. inNum .. ", Input Name: " .. inName)
        	
            	if(inNum == "04") then
            		setIfChanged(Pioneer_SID, "04_DVD", inName, lul_device)
            	elseif(inNum == "25") then        		
            		setIfChanged(Pioneer_SID, "25_BD", inName, lul_device)
            	elseif(inNum == "05") then
            		setIfChanged(Pioneer_SID, "05_TVSAT", inName, lul_device)
            	elseif(inNum == "06") then
            		setIfChanged(Pioneer_SID, "06_SATCBL", inName, lul_device)	
            	elseif(inNum == "15") then
            		setIfChanged(Pioneer_SID, "15_DVRBDR", inName, lul_device)
            	elseif(inNum == "10") then
            		setIfChanged(Pioneer_SID, "10_Video1", inName, lul_device)
            	elseif(inNum == "14") then
            		setIfChanged(Pioneer_SID, "14_Video2", inName, lul_device)
            	elseif(inNum == "19") then
            		setIfChanged(Pioneer_SID, "19_HDMI1", inName, lul_device)
            	elseif(inNum == "20") then
            		setIfChanged(Pioneer_SID, "20_HDMI2", inName, lul_device)
            	elseif(inNum == "21") then
            		setIfChanged(Pioneer_SID, "21_HDMI3", inName, lul_device)
            	elseif(inNum == "22") then
            		setIfChanged(Pioneer_SID, "22_HDMI4", inName, lul_device)
            	elseif(inNum == "23") then
            		setIfChanged(Pioneer_SID, "23_HDMI5", inName, lul_device)
            	elseif(inNum == "26") then
            		setIfChanged(Pioneer_SID, "26_Internet", inName, lul_device)
            	elseif(inNum == "17") then
            		setIfChanged(Pioneer_SID, "17_IpodUSB", inName, lul_device)
            	elseif(inNum == "18") then
            		setIfChanged(Pioneer_SID, "18_XMRadio", inName, lul_device)
            	elseif(inNum == "01") then
            		setIfChanged(Pioneer_SID, "01_CD", inName, lul_device)
            	elseif(inNum == "03") then
            		setIfChanged(Pioneer_SID, "03_CDRTape", inName, lul_device)
            	elseif(inNum == "02") then
            		setIfChanged(Pioneer_SID, "02_Tuner", inName, lul_device)
            	elseif(inNum == "00") then
            		setIfChanged(Pioneer_SID, "00_Phono", inName, lul_device)											
            	else
            		--	 
            	end
        end
        
        local function handleResponse(func, code, data)        
            	if(func == "VOL") then
            		codeDB = (tonumber(code) - 161) * .5
                    code =  math.floor((tonumber(code)/(maxVol-minVol))*100)
                    setIfChanged(Upnp_SID, "Volume", code, lul_device)
            		setIfChanged(Pioneer_SID, "currentVolumeDB", codeDB, lul_device) 
                elseif(func == "PWR") then
                        if(code == "0") then
                            tmp = "1"
                        else
                            tmp = "0"
                        end 
                    setIfChanged(Switch_SID, "Status", tmp, lul_device)
            	elseif(func == "FN") then
            		tmp = tonumber(code)
            		tmp = inputUser[tmp]
            		setIfChanged(Pioneer_SID, "inputStatus", tmp, lul_device)
            		tmp = tonumber(code)
            		tmp = inputMain[tmp]
            		setIfChanged(Pioneer_SID, "MainInput", tmp, lul_device)
            	elseif(func == "MUT") then
            		if(code == "0") then
            			tmp = "On"
            		elseif(code == "1") then
            			tmp = "Off"
            		else
            			tmp = "Unknown"
            		end
            		setIfChanged(Pioneer_SID, "muteStatus", tmp, lul_device)	 
            	else
            		--        	
            	end        
        end
        
        function getInputNames()
        	sendCommand("?P")
        	sendCommand("?V")
       		sendCommand("?M") 
       		sendCommand("?RGB04")
       		sendCommand("?RGB25")
       		sendCommand("?RGB05")
       		sendCommand("?RGB06")
       		sendCommand("?RGB15")
       		sendCommand("?RGB10")
       		sendCommand("?RGB14")
       		sendCommand("?RGB19")
       		sendCommand("?RGB20")
       		sendCommand("?RGB21")
       		sendCommand("?RGB22")
       		sendCommand("?RGB23")
       		sendCommand("?RGB26")
       		sendCommand("?RGB17")
       		sendCommand("?RGB18")
       		sendCommand("?RGB01") 
       		sendCommand("?RGB03")
       		sendCommand("?RGB02") 
       		sendCommand("?RGB00") 
       		    								
        end

        function PioneerAVStartup(lul_device)
            PARENT_DEVICE = lul_device
            
            local ip = luup.devices[lul_device].ip
            
                if (ip == nil) or (#ip == 0) then
    				luup.task("ip address not entered!", 2, "yourplugin", -1)
    				luup.log("yourplugin: ip address not set.")
    				return false
    			end
			
			ip = string.gsub(ip," ","")
			ipAddress, ipPort = string.match(ip,"(%d+%.%d+%.%d+%.%d+)%:?(%d*)")
    			if (ipAddress == nil) or (#ipAddress == 0) then
    				luup.task("Invalid ip address: " .. ip, 2, "PioneerAV", -1)
    				luup.log("PioneerAV: Invalid ip address: " .. ip)
    				return false
    			end
			
    			if (ipPort == nil) or (#ipPort == 0) then
    				ipPort = 23
    				luup.attr_set("ip",ipAddress .. ":" .. ipPort,lul_device)
    				luup.log("PioneerAV: Port not specified, " .. ipPort .. " assumed.")
    			end
			
            local debSV = luup.variable_get(Pioneer_SID,"Debug", lul_device)
    			if debSV == nil then
         			debSV = "0"
         			luup.variable_set(Pioneer_SID,"Debug",debSV,lul_device)
    			end
			debug = (tonumber(debSV) > 0)
			
			luup.io.open(lul_device, ipAddress, ipPort)
			
            log("Running I_PioneerAV1.xml on  " .. ipAddress .. " for lul_device " .. ":" .. ipPort)
            
            luup.call_delay("getInputNames", 5)
        end
    </functions>
    
    <incoming>
        <lua>
			 local data = tostring(lul_data)
			 
			 local func = data:match("^%a+")
			 code = data:match("%d+")	
		 
			 log("Response - Function:" .. func .. ", Code: " .. code .. ", Raw: " .. data)
			 
    			 if((func == "CLV") or (func == "VSB") or (func == "VHT") or (func == "FL"))  then
    				handleEncodedResponse(func, code, data)
    				log("handleEncodedResponse")
    			 elseif(func == "RGB") then
    			 	handleInputNames(func, code, data)			 	
    			 else
    			 	handleResponse(func, code, data)
    			 	log("handleResponse")
    			 end			
        </lua>
    </incoming>

    <startup>PioneerAVStartup</startup>

    <actionList>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>On</name>
            <run>sendCommand("PO")</run>
        </action>    	
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>Off</name>
            <run>sendCommand("PF")</run>
        </action>
        <action>
            <serviceId>urn:upnp-org:serviceId:SwitchPower1</serviceId>
            <name>GetTarget</name>
            <run>
                sendCommand("?P")
                luup.sleep(1000)
                local target = luup.variable_get(Switch_SID, "Target", lul_device)
            </run>
        </action>
        <action>
            <serviceId>urn:upnp-org:serviceId:SwitchPower1</serviceId>
            <name>SetTarget</name>
            <run>
                local value = tostring(lul_settings.newTargetValue)
                local valueP = ""
                local powerStatus = luup.variable_get(Switch_SID, "Target", lul_device)
                    if (value == "1") then
                        code = "PO"
                    else
                        code = "PF"
                    end
                sendCommand(code)
            </run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>VolumeUp</name>
            <run>sendCommand("VU")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>VolumeDown</name>
            <run>sendCommand("VD")</run>
        </action>         
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>UnMute</name>
            <run>sendCommand("MF")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>Mute</name>
            <run>sendCommand("MO")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>ToggleMute</name>
            <run>
                local valueM = luup.variable_get(Pioneer_SID,"muteStatus", lul_device)
                local value = ""
                    if(valueM == "Off") then
                        code = "MO"
                    else
                        code = "MF"
                    end
                sendCommand(code)
            </run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>SetVolumeTarget</name>
            <run>setVolume(tonumber(lul_settings.newTargetValue))</run>
        </action> 
        <action>
            <serviceId>urn:upnp-org:serviceId:RenderingControl1</serviceId>
            <name>SetVolume</name>
            <run>setVolume(tonumber(lul_settings.DesiredVolume))</run>
        </action> 
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>inDVD</name>
            <run>sendCommand("04FN")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>inBD</name>
            <run>sendCommand("25FN")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>inTVSAT</name>
            <run>sendCommand("05FN")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>inSATCBL</name>
            <run>sendCommand("06FN")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>inDVRBDR</name>
            <run>sendCommand("15FN")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>inVideo1</name>
            <run>sendCommand("10FN")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>inVideo2</name>
            <run>sendCommand("14FN")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>inHDMI1</name>
            <run>sendCommand("19FN")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>inHDMI2</name>
            <run>sendCommand("20FN")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>inHDMI3</name>
            <run>sendCommand("21FN")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>inHDMI4</name>
            <run>sendCommand("22FN")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>inHDMI5</name>
            <run>sendCommand("23FN")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>inInternet</name>
            <run>sendCommand("26FN")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>inIpodUSB</name>
            <run>sendCommand("17FN")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>inXMRadio</name>
            <run>sendCommand("18FN")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>inCD</name>
            <run>sendCommand("01FN")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>inCDRTape</name>
            <run>sendCommand("03FN")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>inTuner</name>
            <run>sendCommand("02FN")</run>
        </action>
        <action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>inPhono</name>
            <run>sendCommand("00FN")</run>
        </action>
	<action>
            <serviceId>urn:shward1-com:serviceId:PioneerNavigation1</serviceId>
            <name>Reconnect</name>
            <run>PioneerAVStartup(lul_device)</run>
        </action>
    </actionList>
</implementation>
